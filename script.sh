#!/bin/bash

function list_users {
    echo "List of users"
    awk -F':' '{ print $1, $6 }' /etc/passwd | sort
}

#   awk: это утилита для обработки текстовых данных.
#   -F':': устанавливает символ : в качестве разделителя полей. В файле /etc/passwd каждый пользователь представлен строкой, где данные разделены двоеточиями.
#   '{ print $1, $6 }': команда awk, которая выводит первое ($1) и шестое ($6) поля для каждой строки:
#       $1 — это имя пользователя.
#       $6 — это домашний каталог пользователя.

function list_processes {
    echo "List of processes"
    ps -eo pid,comm --sort=pid
}

#    ps: команда для отображения информации о текущих процессах.
#   -e: этот параметр говорит команде ps, что нужно отобразить все процессы, запущенные в системе, а не только процессы текущего пользователя.
#   -o: указывает формат вывода. В данном случае, указываются поля, которые будут выводиться.
#    pid: идентификатор процесса (Process ID).
#    comm: имя команды или процесса.
#    --sort=pid: сортирует вывод по идентификатору процесса (PID) в порядке возрастания.

if [ "$#" -eq 0 ]; then
    echo "Usage: $0 [-u|--users] [-p|--processes]"
    exit 1
fi 

#   "$#" — это специальная переменная в Bash, которая содержит количество аргументов, переданных скрипту.
#   Если аргументы не были переданы, скрипт завершает свою работу с кодом выхода 1, что означает, что завершение произошло из-за ошибки или неправильного использования.

for arg in "$@"; do
    case $arg in
        -u|--users)
            list_users
            ;;
        -p|--processes)
            list_processes
            ;;
        *)
            echo "No such args"
            exit 1
            ;;
    esac
done
